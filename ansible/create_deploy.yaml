- name: Deploy Odoo with Docker in EC2 instance
  hosts: all
  become: true

  tasks:
    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list
        apt update

    - name: Install dependencies
      apt:
        name: [ca-certificates, curl, gnupg, lsb-release, docker-ce, docker-ce-cli, containerd.io, docker-buildx-plugin, docker-compose-plugin]
        state: present

    - name: Add ubuntu to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Remove unused apt packages
      apt:
        autoremove: yes
        purge: yes

    - name: Clean up apt cache
      apt:
        autoclean: yes

    - name: Fetch repo
      ansible.builtin.git:
        repo: https://github.com/Mahmoud-Shosha/factory
        dest: /home/ubuntu/factory
        version: HEAD
        update: yes
        force: yes

    - name: Clean up (Remove all Docker containers & images)
      ansible.builtin.shell: |
        containers=$(docker ps -aq)
        if [ -n "$containers" ]; then
          docker stop $containers
          docker rm -f $containers
        else
          echo "No containers to remove."
        fi
        docker image prune -a -f

    - name: Build Docker containers
      shell: docker compose -f /home/ubuntu/factory/odoo-compose.yaml build

    - name: Start Docker containers
      shell: docker compose -f /home/ubuntu/factory/odoo-compose.yaml up -d
